name: 'Repository Restore'
description: 'Restores a backed-up GitHub repository using secure OTP and file ID through File Security API.'
author: 'your-github-username'

inputs:
  activation_code:
    description: 'Activation code for API'
    required: true
  restore_github_token:
    description: 'Token for repo auth'
    required: true
  FILE_RECORD_ID:
    description: 'Enter FILE_RECORD_ID to retrieve a specific backup file.'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check if fileRecordID is Provided
      id: check_fileRecordID
      shell: bash
      run: |
        if [ -z "${{ inputs.FILE_RECORD_ID }}" ]; then
          echo "REQUEST_FILE_RECORD_ID=true" >> $GITHUB_ENV
        else
          echo "REQUEST_FILE_RECORD_ID=false" >> $GITHUB_ENV
          echo "USER_FILE_RECORD_ID=${{ inputs.FILE_RECORD_ID }}" >> $GITHUB_ENV
        fi

    - name: Get Activation Token
      id: get_token
      shell: bash
      run: |
        RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "https://dev.api.file-security.icredible.com/endpoint/activation" \
        -H "Content-Type: application/json" \
        -d '{
          "activationCode": "${{ inputs.activation_code }}",
          "uniqueId": "${{ github.repository_id }}",
          "ip": "${{ runner.ip }}",
          "operatingSystem": "Linux",
          "endpointType": "Workstation",
          "endpointName": "Github Endpoint (${{ github.repository }})"
        }')

        HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
        JSON_BODY=$(echo "$RESPONSE" | head -n -1)

        if [ "$HTTP_STATUS" -ne 200 ]; then
          echo "Failed to get token" && exit 1
        fi

        TOKEN=$(echo "$JSON_BODY" | jq -r '.data.token')
        echo "TOKEN=$TOKEN" >> $GITHUB_ENV

    - name: Request OTP (With Debug Output)
      shell: bash
      run: |
        echo "Requesting OTP..."
        RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "https://dev.api.file-security.icredible.com/OTP/Send" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ env.TOKEN }}" \
          -d '{
            "Source": "FileDownload",
            "OtpGenerationMode": "Number",
            "Type": "MAIL"
          }')
    
        HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
        JSON_BODY=$(echo "$RESPONSE" | head -n -1)
    
        echo "--- RAW API RESPONSE ---"
        echo "$RESPONSE"
        echo "-------------------------"
        echo "HTTP STATUS: $HTTP_STATUS"
        echo "JSON BODY: $JSON_BODY"
    
        if [ "$HTTP_STATUS" -ne 200 ]; then
          echo "❌ OTP request failed. Status: $HTTP_STATUS"
          echo "Message: $(echo "$JSON_BODY" | jq -r '.message // .error // .msg // .description // "No error message provided"')"
          exit 1
        fi
    
        UNIQUE_KEY=$(echo "$JSON_BODY" | jq -r '.data.uniqueKey')
        echo "UNIQUE_KEY=$UNIQUE_KEY" >> $GITHUB_ENV


    - name: Await OTP Input
      id: await_otp
      uses: step-security/wait-for-secrets@v1
      with:
        secrets: |
          RESTORE_OTP_INPUT:
            name: 'Restore OTP'
            description: 'Enter OTP received via email'

    - name: Set OTP After Await
      shell: bash
      run: |
        echo "USER_OTP=${{ steps.await_otp.outputs.RESTORE_OTP_INPUT }}" >> $GITHUB_ENV

    - name: Retrieve Backup
      shell: bash
      run: |
        echo "Retrieving backup file..."
        RESPONSE=$(curl -s -w "\n%{http_code}" -X GET "https://dev.api.file-security.icredible.com/restore/${{ inputs.FILE_RECORD_ID }}" \
        -H "Authorization: Bearer ${{ env.TOKEN }}" \
        -H "X-Verification-Key: ${{ env.USER_OTP }}" \
        -H "X-Unique-Key: ${{ env.UNIQUE_KEY }}"  -o repo.tar.zst)
        echo "Raw API Response: $RESPONSE"
        HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
        JSON_BODY=$(echo "$RESPONSE" | head -n -1)
        if [ "$HTTP_STATUS" -ne 200 ]; then
          echo "Failed to obtain backup file. Response: $RESPONSE"
          echo "Error: Received HTTP status $HTTP_STATUS"
          echo "Response: $JSON_BODY"
          exit 1
        fi
        echo "Backup file retrieved successfully."

    - name: Extract Backup (If OTP Provided)
      shell: bash
      run: |
        echo "Extracting repository backup..."
        zstd -d repo.tar.zst -o repo.tar
        mkdir repo-backup
        tar -xf repo.tar -C .
        ls -la repo-backup
        rm -f repo.tar repo.tar.zst
        echo "Extraction complete."

    - name: Git Configuration
      shell: bash
      run: |
        cd repo-backup
        git config user.name "myapp File Security"
        git config user.email "file-security@myapp.com"
        git config url."https://x-access-token:${GITHUB_TOKEN}@github.com/".insteadOf https://github.com/
      env:
        GITHUB_TOKEN: ${{ inputs.restore_github_token }}

    - name: Push Restored Repository
      shell: bash
      run: |
        cd repo-backup
        git remote set-url origin https://x-access-token:${{ inputs.restore_github_token }}@github.com/${{ github.repository }}.git
        git push --mirror
        echo "Restored backup pushed to repository."
      env:
        GITHUB_TOKEN: ${{ inputs.restore_github_token }}
