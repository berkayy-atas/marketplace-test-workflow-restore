name: 'Secure OTP Verification'
description: 'Interactive OTP verification using web interface'
author: 'your-github-username'

inputs:
  unique_key:
    description: 'Unique key for OTP session'
    required: true
  base_url:
    description: 'Base URL for OTP service'
    required: false
    default: 'https://b72cdc377582.ngrok-free.app'
  wait_seconds:
    description: 'Maximum wait time in seconds'
    required: false
    default: '120'

runs:
  using: 'composite' 
  steps:
    - name: Install dependencies
      shell: bash
      run: sudo apt-get update -y && sudo apt-get install -y jq

    - name: Generate OTP & show link
      id: generate
      shell: bash
      run: |
        UNIQUE_KEY="${{ inputs.unique_key }}"
        BASE_URL="${{ inputs.base_url }}"
        
        OTP=$(curl -s "$BASE_URL/otp?uniqueKey=$UNIQUE_KEY" | jq -r '.otp')

        echo ""
        echo "🔑 OTP oluşturuldu."
        echo "🔐 Tarayıcıda açın:"
        echo "    $BASE_URL/?uniqueKey=$UNIQUE_KEY"
        echo ""
        echo "Generated OTP: $OTP"

        echo "unique_key=$UNIQUE_KEY" >> $GITHUB_OUTPUT
        echo "otp=$OTP" >> $GITHUB_OUTPUT

    - name: Wait for OTP entry
      shell: bash
      run: |
        UNIQUE_KEY=${{ steps.generate.outputs.unique_key }}
        EXPECTED=${{ steps.generate.outputs.otp }}
        BASE_URL="${{ inputs.base_url }}"
        WAIT_SECONDS="${{ inputs.wait_seconds }}"

        DEADLINE=$(( $(date +%s) + $WAIT_SECONDS ))
        while [[ $(date +%s) -lt $DEADLINE ]]; do
          RESPONSE=$(curl -s "$BASE_URL/current-otp?uniqueKey=$UNIQUE_KEY")
          ENTERED=$(echo "$RESPONSE" | jq -r '.otp // empty')

          if [[ -n "$ENTERED" ]]; then
            echo "Entered OTP $ENTERED"
            if [[ "$ENTERED" == "$EXPECTED" ]]; then
              echo "✅ Doğru OTP"
              exit 0
            else
              echo "::error::Yanlış OTP"
              exit 1
            fi
          fi
          sleep 5
        done
        echo "::error::Süre doldu"
        exit 1

    - name: Invalidate on server
      if: always()
      shell: bash
      run: |
        UNIQUE_KEY=${{ steps.generate.outputs.unique_key }}
        BASE_URL="${{ inputs.base_url }}"
        curl -s -X POST "$BASE_URL/invalidate?uniqueKey=$UNIQUE_KEY" > /dev/null || true
        echo "🧹 Context kaldırıldı (veya zaten yoktu)."

    - name: Continue workflow
      if: success()
      shell: bash
      run: echo "🚀 OTP doğrulandı, iş akışı devam ediyor."